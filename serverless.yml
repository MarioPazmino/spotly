# org: mariora
app: alquiler-canchas-api
service: alquiler-canchas-api

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - !GetAtt ReservasTable.Arn
            - !Join ["", [!GetAtt ReservasTable.Arn, "/*"]]
  environment:
    STAGE: ${opt:stage, 'dev'}
    RESERVAS_TABLE: Reservas-${opt:stage, 'dev'}
    CENTROS_DEPORTIVOS_TABLE: CentrosDeportivos-${opt:stage, 'dev'}
    CANCHAS_TABLE: Canchas-${opt:stage, 'dev'}
    USUARIOS_TABLE: Usuarios-${opt:stage, 'dev'}
    PRODUCTOS_TABLE: Productos-${opt:stage, 'dev'}
    VENTAS_TABLE: Ventas-${opt:stage, 'dev'}

functions:
  createReservation:
    handler: src/function/addReservation.addReservation
    events:
      - httpApi:
          path: /crearreserva
          method: post

  listarReservas:
    handler: src/function/listReservation.listReservation
    events:
      - httpApi:
          path: /reservas
          method: get

resources:
  Resources:
    # Tablas DynamoDB
    CentrosDeportivosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CentrosDeportivos-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    CanchasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Canchas-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: centroDeportivoId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CentroDeportivoIndex
            KeySchema:
              - AttributeName: centroDeportivoId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ReservasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Reservas-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: canchaId
            AttributeType: S
          - AttributeName: fecha
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CanchaFechaIndex
            KeySchema:
              - AttributeName: canchaId
                KeyType: HASH
              - AttributeName: fecha
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    UsuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Usuarios-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ProductosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Productos-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: centroDeportivoId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CentroDeportivoIndex
            KeySchema:
              - AttributeName: centroDeportivoId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    VentasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Ventas-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: centroDeportivoId
            AttributeType: S
          - AttributeName: fecha
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CentroDeportivoFechaIndex
            KeySchema:
              - AttributeName: centroDeportivoId
                KeyType: HASH
              - AttributeName: fecha
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    # Recursos nuevos integrados correctamente
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: alquiler-canchas-users-${opt:stage, 'dev'}
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
            RequireUppercase: true

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: alquiler-canchas-app-client
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false

    WebAppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: alquiler-canchas-webapp-${opt:stage, 'dev'}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: !Sub "${WebAppBucket}.s3.amazonaws.com"
              Id: WebApp
              S3OriginConfig: {}
          Enabled: true
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            TargetOriginId: WebApp
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
                