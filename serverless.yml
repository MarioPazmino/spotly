# org: mariora
app: alquiler-canchas-api
service: alquiler-canchas-api

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - dynamodb:GetItem
          Resource:
          - !GetAtt CentrosDeportivosTable.Arn
          - !Join ["", [!GetAtt CentrosDeportivosTable.Arn, "/*"]]
          - !GetAtt CanchasTable.Arn
          - !Join ["", [!GetAtt CanchasTable.Arn, "/*"]]
          - !GetAtt UsuariosTable.Arn  
          - !Join ["", [!GetAtt UsuariosTable.Arn, "/index/EmailIndex"]] 
          - !GetAtt HorariosTable.Arn
          - !Join ["", [!GetAtt HorariosTable.Arn, "/*"]]
          - !Join ["", [!GetAtt HorariosTable.Arn, "/index/CanchaFechaIndex"]]
          - !GetAtt ReservasTable.Arn
          - !Join ["", [!GetAtt ReservasTable.Arn, "/*"]]
          - !Join ["", [!GetAtt ReservasTable.Arn, "/index/CanchaFechaIndex"]]
          - !GetAtt PagosTable.Arn
          - !Join ["", [!GetAtt PagosTable.Arn, "/*"]]
          - !Join ["", [!GetAtt PagosTable.Arn, "/index/ReservaIndex"]]
          - !Join ["", [!GetAtt PagosTable.Arn, "/index/UserIndex"]]
          
  environment:
    STAGE: ${opt:stage, 'dev'}
    RESERVAS_TABLE: Reservas-${opt:stage, 'dev'}
    CENTROS_DEPORTIVOS_TABLE: CentrosDeportivos-${opt:stage, 'dev'}
    CANCHAS_TABLE: Canchas-${opt:stage, 'dev'}
    USUARIOS_TABLE: Usuarios-${opt:stage, 'dev'}
    SCHEDULES_TABLE: Horarios-${opt:stage, 'dev'}
    PAGOS_TABLE: Pagos-${opt:stage, 'dev'}  

functions:
  #======================================================================================#
  #====================================USUARIOS==========================================#
  #======================================================================================#
  addUsers:
    handler: src/function/Users/addUsers.addUserLambda
    events:
      - httpApi:
          path: /usuarios
          method: post

  listUsers:
    handler: src/function/Users/listUsers.listUsers
    events:
      - httpApi:
          path: /usuarios
          method: get

  updateUsers:
    handler: src/function/Users/updateUsers.updateUsers
    events:
      - httpApi:
          path: /usuarios/{userId}
          method: put

  deleteUsers:
    handler: src/function/Users/deleteUsers.deleteUsers
    events:
      - httpApi:
          path: /usuarios/{userId}
          method: delete

  #======================================================================================#
  #==============================CENTRO DEPORTIVO========================================#
  #======================================================================================#
  createSportsCenter:
    handler: src/function/Sports-Centers/addSportsCenters.addSportsCenters
    events:
      - httpApi:
          path: /centros-deportivos
          method: post
 
  listSportsCenters:
    handler: src/function/Sports-Centers/listSportsCenters.listSportsCenters
    events:
      - httpApi:
          path: /centros-deportivos
          method: get

  updateSportsCenter:
    handler: src/function/Sports-Centers/updateSportsCenters.updateSportsCenter
    events:
      - httpApi:
          path: /centros-deportivos/{id}
          method: put

  deleteSportsCenter:
    handler: src/function/Sports-Centers/deleteSportsCenters.deleteSportsCenter
    events:
      - httpApi:
          path: /centros-deportivos/{id}
          method: delete

  #======================================================================================#
  #=====================================CANCHAS==========================================#
  #======================================================================================#
  createCancha:
    handler: src/function/Canchas/addCanchas.addCanchas
    events:
      - httpApi:
          path: /canchas
          method: post
  
  listCanchas:
    handler: src/function/Canchas/listCanchas.listCanchas
    events:
      - httpApi:
          path: /canchas
          method: get
  
  updateCanchas:
    handler: src/function/Canchas/updateCanchas.updateCanchas
    events:
      - httpApi:
          path: /canchas/{id}
          method: put

  deleteCanchas:
    handler: src/function/Canchas/deleteCanchas.deleteCanchas
    events:
      - httpApi:
          path: /canchas/{id}
          method: delete

  #======================================================================================#
  #=====================================HORARIOS=========================================#
  #======================================================================================#
  createSchedule:
    handler: src/function/Schedules/addSchedules.addSchedule
    events:
      - httpApi:
          path: /horarios
          method: post
          
  listSchedules:
    handler: src/function/Schedules/listSchedules.listSchedules
    events:
      - httpApi:
          path: /horarios
          method: get
          
  updateSchedule:
    handler: src/function/Schedules/updateSchedules.updateSchedule
    events:
      - httpApi:
          path: /horarios/{horarioId}
          method: put
          
  deleteSchedule:
    handler: src/function/Schedules/deleteSchedules.deleteSchedule
    events:
      - httpApi:
          path: /horarios/{horarioId}
          method: delete

  #======================================================================================#
  #====================================RESERVAS==========================================#
  #======================================================================================#
  createReservation:
    handler: src/function/Reservation/createReservation.createReservation
    events:
      - httpApi:
          path: /reservation
          method: post
  listReservas:
    handler: src/function/Reservation/listReservation.listReservation
    events:
      - httpApi:
          path: /reservation
          method: get
  updateReserva:
    handler: src/function/Reservation/updateReservation.updateReservation
    events:
      - httpApi:
          path: /reservation/{ReservaId}
          method: put
  deleteReserva:
    handler: src/function/Reservation/deleteReservation.deleteReservation
    events:
      - httpApi:
          path: /reservation/{ReservaId}
          method: delete
  
  #======================================================================================#
  #=======================================PAGOS==========================================#
  #======================================================================================#
  createPayment:
    handler: src/function/Payments/addPayments.addPayment
    events:
      - httpApi:
          path: /pagos
          method: post
  listPayments:
    handler: src/function/Payments/listPayments.listPayments
    events:
      - httpApi:
          path: /pagos
          method: get
  updatePayment:
    handler: src/function/Payments/updatePayments.updatePayment
    events:
      - httpApi:
          path: /pagos/{pagoId}
          method: put
  deletePayment:
    handler: src/function/Payments/deletePayments.deletePayment
    events:
      - httpApi:
          path: /pagos/{pagoId}
          method: delete
          
resources:
  Resources:
    #======================================================================================#
    #================================Tablas DynamoDB=======================================#
    #======================================================================================#
    CentrosDeportivosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CentrosDeportivos-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: CentroId
            AttributeType: S
        KeySchema:
          - AttributeName: CentroId
            KeyType: HASH

    CanchasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Canchas-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: CanchaId
            AttributeType: S
          - AttributeName: CentroId
            AttributeType: S
        KeySchema:
          - AttributeName: CanchaId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CentroDeportivoIndex
            KeySchema:
              - AttributeName: CentroId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ReservasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Reservas-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: ReservaId
            AttributeType: S
          - AttributeName: CanchaId
            AttributeType: S
          - AttributeName: fecha
            AttributeType: S
        KeySchema:
          - AttributeName: ReservaId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CanchaFechaIndex
            KeySchema:
              - AttributeName: CanchaId
                KeyType: HASH
              - AttributeName: fecha
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    UsuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Usuarios-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: userId     
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId     
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    HorariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Horarios-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: horarioId
            AttributeType: S
          - AttributeName: CanchaId
            AttributeType: S
          - AttributeName: fecha
            AttributeType: S
        KeySchema:
          - AttributeName: horarioId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CanchaFechaIndex
            KeySchema:
              - AttributeName: CanchaId
                KeyType: HASH
              - AttributeName: fecha
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    PagosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Pagos-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pagoId
            AttributeType: S
          - AttributeName: ReservaId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: pagoId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ReservaIndex
            KeySchema:
              - AttributeName: ReservaId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    #======================================================================================#
    #====================================COGNITO==========================================#
    #======================================================================================#
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: alquiler-canchas-users-${opt:stage, 'dev'}
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
            RequireUppercase: true

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: alquiler-canchas-app-client
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false

    WebAppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: alquiler-canchas-webapp-${opt:stage, 'dev'}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: !Sub "${WebAppBucket}.s3.amazonaws.com"
              Id: WebApp
              S3OriginConfig: {}
          Enabled: true
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            TargetOriginId: WebApp
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
