# org: mariora
app: alquiler-canchas-api
service: alquiler-canchas-api

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - dynamodb:GetItem
          Resource:
          - !GetAtt CentrosDeportivosTable.Arn
          - !Join ["", [!GetAtt CentrosDeportivosTable.Arn, "/*"]]
          - !GetAtt CanchasTable.Arn
          - !Join ["", [!GetAtt CanchasTable.Arn, "/*"]]
          - !GetAtt UsuariosTable.Arn  
          - !Join ["", [!GetAtt UsuariosTable.Arn, "/index/EmailIndex"]] 
          - !GetAtt HorariosTable.Arn
          - !Join ["", [!GetAtt HorariosTable.Arn, "/*"]]
          - !Join ["", [!GetAtt HorariosTable.Arn, "/index/CanchaFechaIndex"]]
          - !GetAtt ReservasTable.Arn
          - !Join ["", [!GetAtt ReservasTable.Arn, "/*"]]
          - !Join ["", [!GetAtt ReservasTable.Arn, "/index/CanchaFechaIndex"]]
          - !GetAtt PagosTable.Arn
          - !Join ["", [!GetAtt PagosTable.Arn, "/*"]]
          - !Join ["", [!GetAtt PagosTable.Arn, "/index/ReservaIndex"]]
          - !Join ["", [!GetAtt PagosTable.Arn, "/index/UserIndex"]]
          
  environment:
    STAGE: ${opt:stage, 'dev'}
    RESERVAS_TABLE: Reservas-${opt:stage, 'dev'}
    CENTROS_DEPORTIVOS_TABLE: CentrosDeportivos-${opt:stage, 'dev'}
    CANCHAS_TABLE: Canchas-${opt:stage, 'dev'}
    USUARIOS_TABLE: Usuarios-${opt:stage, 'dev'}
    SCHEDULES_TABLE: Horarios-${opt:stage, 'dev'}
    PAGOS_TABLE: Pagos-${opt:stage, 'dev'} 
    COGNITO_USER_POOL_ID: !Ref CognitoUserPool
    COGNITO_CLIENT_ID: !Ref CognitoUserPoolClient
    TOKEN_EXPIRATION: 3600 # En segundos (1 hora) 
    
functions:
  # Una única función para toda la API
  api:
    handler: handler.api
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    # Definición del HTTP API Gateway
    HttpApi:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: alquiler-canchas-api-${opt:stage, 'dev'}
        ProtocolType: HTTP
        CorsConfiguration:
          AllowHeaders:
            - Content-Type
            - Authorization
            - X-Amz-Date
            - X-Api-Key
            - X-Amz-Security-Token
          AllowMethods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
          AllowOrigins:
            - '*'

    # Dominio personalizado para API Gateway usando certificado existente
    ApiGatewayDomainName:
      Type: AWS::ApiGatewayV2::DomainName
      Properties:
        DomainName: api.tucanchasdeportivas.com
        DomainNameConfigurations:
          - EndpointType: REGIONAL
            CertificateArn: arn:aws:acm:us-east-1:237029655206:certificate/7c263b6e-d31c-48bd-bb3a-73933b7d5d6f

    # Mapeo de API Gateway al dominio personalizado
    ApiGatewayMapping:
      Type: AWS::ApiGatewayV2::ApiMapping
      DependsOn:
        - ApiGatewayDomainName
      Properties:
        DomainName: api.tucanchasdeportivas.com
        ApiId: !Ref HttpApi
        Stage: $default

    # Registro DNS para el dominio API
    ApiDomainRecord:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: Z027980929X1P0VZNXKFN # ID de tu zona existente
        Name: api.tucanchasdeportivas.com
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt ApiGatewayDomainName.RegionalHostedZoneId
          DNSName: !GetAtt ApiGatewayDomainName.RegionalDomainName
    
    #======================================================================================#
    #================================Tablas DynamoDB=======================================#
    #======================================================================================#
    CentrosDeportivosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CentrosDeportivos-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: CentroId
            AttributeType: S
        KeySchema:
          - AttributeName: CentroId
            KeyType: HASH

    CanchasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Canchas-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: CanchaId
            AttributeType: S
          - AttributeName: CentroId
            AttributeType: S
        KeySchema:
          - AttributeName: CanchaId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CentroDeportivoIndex
            KeySchema:
              - AttributeName: CentroId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ReservasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Reservas-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: ReservaId
            AttributeType: S
          - AttributeName: CanchaId
            AttributeType: S
          - AttributeName: fecha
            AttributeType: S
        KeySchema:
          - AttributeName: ReservaId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CanchaFechaIndex
            KeySchema:
              - AttributeName: CanchaId
                KeyType: HASH
              - AttributeName: fecha
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    UsuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Usuarios-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: userId     
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId     
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    HorariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Horarios-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: horarioId
            AttributeType: S
          - AttributeName: CanchaId
            AttributeType: S
          - AttributeName: fecha
            AttributeType: S
        KeySchema:
          - AttributeName: horarioId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: CanchaFechaIndex
            KeySchema:
              - AttributeName: CanchaId
                KeyType: HASH
              - AttributeName: fecha
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    PagosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Pagos-${opt:stage, 'dev'}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pagoId
            AttributeType: S
          - AttributeName: ReservaId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: pagoId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ReservaIndex
            KeySchema:
              - AttributeName: ReservaId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    #======================================================================================#
    #====================================COGNITO==========================================#
    #======================================================================================#
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: alquiler-canchas-users-${opt:stage, 'dev'}
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
            RequireUppercase: true

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: alquiler-canchas-app-client
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false

    WebAppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: alquiler-canchas-webapp-${opt:stage, 'dev'}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: !Sub "${WebAppBucket}.s3.amazonaws.com"
              Id: WebApp
              S3OriginConfig: {}
          Enabled: true
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            TargetOriginId: WebApp
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none